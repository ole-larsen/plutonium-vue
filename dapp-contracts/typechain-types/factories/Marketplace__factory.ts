/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Overrides } from "ethers";
import { Signer, utils, Contract, ContractFactory } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Marketplace, MarketplaceInterface } from "../Marketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProductCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productCount",
        type: "uint256",
      },
    ],
    name: "setProductCount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006001553480156200001657600080fd5b50604051620014653803806200146583398181016040528101906200003c9190620002f1565b6200006c6040518060600160405280602481526020016200144160249139826200008560201b620003681760201c565b80600090816200007d91906200058d565b505062000701565b6200012782826040516024016200009e929190620006c6565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200012b60201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001bd8262000172565b810181811067ffffffffffffffff82111715620001df57620001de62000183565b5b80604052505050565b6000620001f462000154565b9050620002028282620001b2565b919050565b600067ffffffffffffffff82111562000225576200022462000183565b5b620002308262000172565b9050602081019050919050565b60005b838110156200025d57808201518184015260208101905062000240565b838111156200026d576000848401525b50505050565b60006200028a620002848462000207565b620001e8565b905082815260208101848484011115620002a957620002a86200016d565b5b620002b68482856200023d565b509392505050565b600082601f830112620002d657620002d562000168565b5b8151620002e884826020860162000273565b91505092915050565b6000602082840312156200030a57620003096200015e565b5b600082015167ffffffffffffffff8111156200032b576200032a62000163565b5b6200033984828501620002be565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200039557607f821691505b602082108103620003ab57620003aa6200034d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003d6565b620004218683620003d6565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200046e62000468620004628462000439565b62000443565b62000439565b9050919050565b6000819050919050565b6200048a836200044d565b620004a2620004998262000475565b848454620003e3565b825550505050565b600090565b620004b9620004aa565b620004c68184846200047f565b505050565b5b81811015620004ee57620004e2600082620004af565b600181019050620004cc565b5050565b601f8211156200053d576200050781620003b1565b6200051284620003c6565b8101602085101562000522578190505b6200053a6200053185620003c6565b830182620004cb565b50505b505050565b600082821c905092915050565b6000620005626000198460080262000542565b1980831691505092915050565b60006200057d83836200054f565b9150826002028217905092915050565b620005988262000342565b67ffffffffffffffff811115620005b457620005b362000183565b5b620005c082546200037c565b620005cd828285620004f2565b600060209050601f831160018114620006055760008415620005f0578287015190505b620005fc85826200056f565b8655506200066c565b601f1984166200061586620003b1565b60005b828110156200063f5784890151825560018201915060208501945060208101905062000618565b868310156200065f57848901516200065b601f8916826200054f565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b6000620006928262000342565b6200069e818562000674565b9350620006b08185602086016200023d565b620006bb8162000172565b840191505092915050565b60006040820190508181036000830152620006e2818562000685565b90508181036020830152620006f8818462000685565b90509392505050565b610d3080620007116000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806317d7de7c146100515780634a348da91461006f57806351fbfdfa1461008d578063c47f0027146100a9575b600080fd5b6100596100c5565b60405161006691906106a0565b60405180910390f35b610077610220565b60405161008491906106db565b60405180910390f35b6100a760048036038101906100a29190610736565b61026b565b005b6100c360048036038101906100be9190610898565b61029a565b005b60606101906040518060400160405280600b81526020017f204765744e616d652025730000000000000000000000000000000000000000008152506000805461010d90610910565b80601f016020809104026020016040519081016040528092919081815260200182805461013990610910565b80156101865780601f1061015b57610100808354040283529160200191610186565b820191906000526020600020905b81548152906001019060200180831161016957829003601f168201915b5050505050610368565b6000805461019d90610910565b80601f01602080910402602001604051908101604052809291908181526020018280546101c990610910565b80156102165780601f106101eb57610100808354040283529160200191610216565b820191906000526020600020905b8154815290600101906020018083116101f957829003601f168201915b5050505050905090565b60006102636040518060400160405280601481526020017f204765742070726f64756374436f756e74202564000000000000000000000000815250600154610404565b600154905090565b610290604051806060016040528060298152602001610cb160299139600154836104a0565b8060018190555050565b60008151036102a857600080fd5b610355604051806060016040528060218152602001610cda60219139600080546102d190610910565b80601f01602080910402602001604051908101604052809291908181526020018280546102fd90610910565b801561034a5780601f1061031f5761010080835404028352916020019161034a565b820191906000526020600020905b81548152906001019060200180831161032d57829003601f168201915b50505050508361053f565b80600090816103649190610aed565b5050565b610400828260405160240161037e929190610bbf565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506105de565b5050565b61049c828260405160240161041a929190610bf6565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506105de565b5050565b61053a8383836040516024016104b893929190610c26565b6040516020818303038152906040527fca47c4eb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506105de565b505050565b6105d983838360405160240161055793929190610c64565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506105de565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610641578082015181840152602081019050610626565b83811115610650576000848401525b50505050565b6000601f19601f8301169050919050565b600061067282610607565b61067c8185610612565b935061068c818560208601610623565b61069581610656565b840191505092915050565b600060208201905081810360008301526106ba8184610667565b905092915050565b6000819050919050565b6106d5816106c2565b82525050565b60006020820190506106f060008301846106cc565b92915050565b6000604051905090565b600080fd5b600080fd5b610713816106c2565b811461071e57600080fd5b50565b6000813590506107308161070a565b92915050565b60006020828403121561074c5761074b610700565b5b600061075a84828501610721565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107a582610656565b810181811067ffffffffffffffff821117156107c4576107c361076d565b5b80604052505050565b60006107d76106f6565b90506107e3828261079c565b919050565b600067ffffffffffffffff8211156108035761080261076d565b5b61080c82610656565b9050602081019050919050565b82818337600083830152505050565b600061083b610836846107e8565b6107cd565b90508281526020810184848401111561085757610856610768565b5b610862848285610819565b509392505050565b600082601f83011261087f5761087e610763565b5b813561088f848260208601610828565b91505092915050565b6000602082840312156108ae576108ad610700565b5b600082013567ffffffffffffffff8111156108cc576108cb610705565b5b6108d88482850161086a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061092857607f821691505b60208210810361093b5761093a6108e1565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026109a37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610966565b6109ad8683610966565b95508019841693508086168417925050509392505050565b6000819050919050565b60006109ea6109e56109e0846106c2565b6109c5565b6106c2565b9050919050565b6000819050919050565b610a04836109cf565b610a18610a10826109f1565b848454610973565b825550505050565b600090565b610a2d610a20565b610a388184846109fb565b505050565b5b81811015610a5c57610a51600082610a25565b600181019050610a3e565b5050565b601f821115610aa157610a7281610941565b610a7b84610956565b81016020851015610a8a578190505b610a9e610a9685610956565b830182610a3d565b50505b505050565b600082821c905092915050565b6000610ac460001984600802610aa6565b1980831691505092915050565b6000610add8383610ab3565b9150826002028217905092915050565b610af682610607565b67ffffffffffffffff811115610b0f57610b0e61076d565b5b610b198254610910565b610b24828285610a60565b600060209050601f831160018114610b575760008415610b45578287015190505b610b4f8582610ad1565b865550610bb7565b601f198416610b6586610941565b60005b82811015610b8d57848901518255600182019150602085019450602081019050610b68565b86831015610baa5784890151610ba6601f891682610ab3565b8355505b6001600288020188555050505b505050505050565b60006040820190508181036000830152610bd98185610667565b90508181036020830152610bed8184610667565b90509392505050565b60006040820190508181036000830152610c108185610667565b9050610c1f60208301846106cc565b9392505050565b60006060820190508181036000830152610c408186610667565b9050610c4f60208301856106cc565b610c5c60408301846106cc565b949350505050565b60006060820190508181036000830152610c7e8186610667565b90508181036020830152610c928185610667565b90508181036040830152610ca68184610667565b905094935050505056fe20204368616e67696e672070726f64756374436f756e742066726f6d202725642720746f202725642720204368616e67696e67206e616d652066726f6d202725732720746f2027257327a26469706673582212207a25a0e525a656b9d75ce0bcb473da52408f2fcdb7028cc56d11cb0ba9a5710464736f6c634300080f003320204465706c6f79696e672061204d61726b6574706c6163652077697468206e616d653a";

type MarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Marketplace__factory extends ContractFactory {
  constructor(...args: MarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Marketplace> {
    return super.deploy(_name, overrides || {}) as Promise<Marketplace>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, overrides || {});
  }
  override attach(address: string): Marketplace {
    return super.attach(address) as Marketplace;
  }
  override connect(signer: Signer): Marketplace__factory {
    return super.connect(signer) as Marketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceInterface {
    return new utils.Interface(_abi) as MarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Marketplace {
    return new Contract(address, _abi, signerOrProvider) as Marketplace;
  }
}
